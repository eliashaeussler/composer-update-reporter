name: Tests
on: [push, pull_request]

jobs:
  # Job: Run unit tests
  tests:
    name: PHP ${{ matrix.php-version }} & Composer ${{ matrix.composer-version }}
    runs-on: ubuntu-20.04
    services:
      mailhog:
        image: mailhog/mailhog
        env:
          MH_SMTP_BIND_ADDR: 0.0.0.0:2025
          MH_API_BIND_ADDR: 0.0.0.0:9025
          MH_UI_BIND_ADDR: 0.0.0.0:9025
        ports:
          - 2025:2025
          - 9025:9025
    strategy:
      fail-fast: false
      matrix:
        include:
          - php-version: 7.1
            composer-version: 1
          - php-version: 7.1
            composer-version: 2
          - php-version: 7.2
            composer-version: 1
          - php-version: 7.2
            composer-version: 2
          - php-version: 7.3
            composer-version: 1
          - php-version: 7.3
            composer-version: 2
          - php-version: 7.4
            composer-version: 1
          - php-version: 7.4
            composer-version: 2
          - php-version: 8.0
            composer-version: 1
          - php-version: 8.0
            composer-version: 2
            coverage: 1
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Prepare environment
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer:v${{ matrix.composer-version }}
          coverage: pcov

      # Define Composer cache
      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Define Composer cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: tests-php-${{ matrix.php-version }}-composer-${{ matrix.composer-version }}
          restore-keys: |
            tests-php-${{ matrix.php-version }}-composer-

      # Install dependencies
      - name: Install Composer and dependencies
        run: composer require --dev --no-progress "composer/composer:^${{ matrix.composer-version }}"

      # Run tests
      - name: Build coverage directory
        run: mkdir -p .build/coverage
      - name: Run tests with coverage
        run: composer exec phpunit -- -c phpunit.coverage.xml
        if: ${{ matrix.coverage }}
      - name: Run tests without coverage
        run: composer exec phpunit -- -c phpunit.xml
        if: ${{ !matrix.coverage }}

      # Report coverage
      - name: Fix coverage path
        working-directory: .build/coverage
        run: sed -i 's/\/home\/runner\/work\/composer-update-reporter\/composer-update-reporter\//\/github\/workspace\//g' clover.xml
        if: ${{ matrix.coverage }}
      - name: Run SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: ${{ matrix.coverage }}

  # Job: Run unit tests with lowest installed dependency versions
  tests-lowest:
    name: '[test-lowest] PHP ${{ matrix.php-version }} & Composer ${{ matrix.composer-version }}'
    runs-on: ubuntu-20.04
    services:
      mailhog:
        image: mailhog/mailhog
        env:
          MH_SMTP_BIND_ADDR: 0.0.0.0:2025
          MH_API_BIND_ADDR: 0.0.0.0:9025
          MH_UI_BIND_ADDR: 0.0.0.0:9025
        ports:
          - 2025:2025
          - 9025:9025
    strategy:
      fail-fast: false
      matrix:
        php-version: ["7.1", "7.2", "7.3", "7.4", "8.0"]
        composer-version: ["1", "2"]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Prepare environment
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer:v${{ matrix.composer-version }}
          coverage: none

      # Define Composer cache
      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Define Composer cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: tests-lowest-php-${{ matrix.php-version }}-composer-${{ matrix.composer-version }}
          restore-keys: |
            tests-lowest-php-${{ matrix.php-version }}-composer-

      # Install dependencies
      - name: Install Composer and dependencies
        run: composer require --dev --no-progress --prefer-lowest "composer/composer:^${{ matrix.composer-version }}"

      # Run tests
      - name: Run tests
        run: |
          mkdir -p .build/coverage
          composer test
