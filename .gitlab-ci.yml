default:
  image: webdevops/php:8.0

cache: &cache
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - vendor/
  policy: pull

variables:
  COMPOSER_ALLOW_SUPERUSER: "1"
  COMPOSER_NO_INTERACTION: "1"
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_JOB_ID/$CI_PROJECT_PATH
  MAILHOG_HOST: mailhog
  MAILHOG_SMTP_PORT: "1025"
  MAILHOG_API_PORT: "8025"

include:
  local: update-check.gitlab-ci.yml

stages:
  - build
  - lint
  - sca
  - test
  - docs
  - deploy
  - release

build:
  stage: build
  script:
    - composer install --no-progress
  cache:
    <<: *cache
    policy: pull-push
  rules:
    - if: '$UPDATE_CHECK_REF'
      when: never
    - if: '$RENDER_DOCS'
      when: never
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

lint:php:
  stage: lint
  needs:
    - build
  script:
    - composer lint -- --dry-run
  rules:
    - if: '$UPDATE_CHECK_REF'
      when: never
    - if: '$RENDER_DOCS'
      when: never
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

lint:composer:
  stage: lint
  needs:
    - build
  script:
    - composer normalize --dry-run
  rules:
    - if: '$UPDATE_CHECK_REF'
      when: never
    - if: '$RENDER_DOCS'
      when: never
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

sca:php:
  stage: sca
  needs:
    - build
  before_script:
    - mkdir -p .build
  script:
    - composer sca -- --error-format gitlab > .build/phpstan.json
  artifacts:
    reports:
      codequality: .build/phpstan.json
  rules:
    - if: '$UPDATE_CHECK_REF'
      when: never
    - if: '$RENDER_DOCS'
      when: never
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

test:
  image: webdevops/php:${PHP_VERSION}
  stage: test
  services:
    - name: mailhog/mailhog
      alias: mailhog
  variables:
    PHP_MEMORY_LIMIT: "-1"
    PHP_MAX_EXECUTION_TIME: "600"
  before_script:
    - mkdir -p .build/coverage
    - composer global require --dev --no-progress --prefer-stable brianium/paratest:"*"
    - >
      if [ "$COVERAGE" == "1" ]; then
        pecl channel-update pecl.php.net
        pecl install pcov
        docker-php-ext-enable pcov
      fi
  script:
    - composer self-update --${COMPOSER_VERSION}
    - composer --version
    - php --version
    - composer require --dev "composer/composer:^${COMPOSER_VERSION}.0" --no-progress
    - >
      if [ "$COVERAGE" == "1" ]; then
        COMPOSER_PROCESS_TIMEOUT=1000 /root/.composer/vendor/bin/paratest --runner=WrapperRunner -c phpunit.coverage.xml --coverage-text
      else
        /root/.composer/vendor/bin/paratest --runner=WrapperRunner -c phpunit.xml
      fi
  parallel:
    matrix:
      - PHP_VERSION: ["7.1", "7.2", "7.3", "7.4"]
        COMPOSER_VERSION: ["1", "2"]
      - PHP_VERSION: "8.0"
        COMPOSER_VERSION: "1"
      - PHP_VERSION: "8.0"
        COMPOSER_VERSION: "2"
        COVERAGE: "1"
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  cache:
    <<: *cache
    key: "${CI_COMMIT_REF_SLUG}-${PHP_VERSION}-${COMPOSER_VERSION}"
    policy: pull-push
  artifacts:
    reports:
      junit: .build/coverage/junit.xml
  rules:
    - if: '$UPDATE_CHECK_REF'
      when: never
    - if: '$RENDER_DOCS'
      when: never
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

docs:
  stage: docs
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  before_script:
    - apk add --no-cache docker-compose
  script:
    - docker-compose -f docs/build/docker-compose.yaml build --pull
    - docker-compose -f docs/build/docker-compose.yaml run --rm docs build
  cache: {}
  artifacts:
    paths:
      - site/
  rules:
    - if: '$UPDATE_CHECK_REF'
      when: never
    - if: '$RENDER_DOCS'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success

deploy:docs:
  stage: deploy
  image: instrumentisto/rsync-ssh
  dependencies:
    - docs
  before_script:
    - which ssh-agent || (apt-get update -y && apt-get install openssh-client -y)
    - eval $(ssh-agent -s)
    - echo "$PRIVATE_KEY_FOR_DEPLOYMENT" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan cp140.sp-server.net >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - 'rsync -avz --chmod=Du=rwx,Dgo=rx,Fu=rw,Fog=r site/ eliashae@cp140.sp-server.net:/home/eliashae/html/docs.elias-haeussler.de/composer-update-reporter/'
  cache: {}
  rules:
    - if: '$UPDATE_CHECK_REF'
      when: never
    - if: '$RENDER_DOCS && $DEPLOY_DOCS'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Creating release for ${CI_COMMIT_TAG}"
  release:
    name: '${CI_COMMIT_TAG}'
    description: 'Release notes are available in the [Changelog](https://gitlab.elias-haeussler.de/eliashaeussler/composer-update-reporter/-/blob/${CI_COMMIT_TAG}/CHANGELOG.md) file.'
    tag_name: '${CI_COMMIT_TAG}'
    ref: '${CI_COMMIT_TAG}'
  rules:
    - if: '$UPDATE_CHECK_REF'
      when: never
    - if: '$RENDER_DOCS'
      when: never
    - if: '$CI_COMMIT_TAG'
      when: on_success
