variables:
  COMPOSER_CACHE_DIR: "/cache/composer"
  COMPOSER_ALLOW_SUPERUSER: "1"
  COMPOSER_NO_INTERACTION: "1"
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_JOB_ID/$CI_PROJECT_PATH

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH'

stages:
  - lint
  - test

lint:php:
  image: webdevops/php:7.4
  stage: lint
  before_script:
    - composer install --no-progress
  script:
    - composer lint -- --dry-run
  rules:
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
      when: never
    - when: on_success

.test: &test-template
  image: webdevops/php:${PHP_VERSION}
  stage: test
  services:
    - name: mailhog/mailhog
      alias: mailhog
  script:
    - export MAILHOG_HOST=mailhog
    - export MAILHOG_SMTP_PORT=1025
    - export MAILHOG_API_PORT=8025
    - composer self-update --${COMPOSER_VERSION}
    - composer --version
    - php --version
    - composer require --dev "composer/composer:^${COMPOSER_VERSION}.0" --no-progress
    - >
      if [ $UPDATE_CHECK_REF ]; then
        composer require "eliashaeussler/composer-update-check:dev-master#$UPDATE_CHECK_REF"
      fi
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  artifacts:
    reports:
      junit: .build/coverage/junit.xml

test:
  <<: *test-template
  after_script:
    - composer test -- --testdox
  parallel:
    matrix:
      - PHP_VERSION: ["7.1", "7.2", "7.3"]
        COMPOSER_VERSION: ["1", "2"]
      - PHP_VERSION: "7.4"
        COMPOSER_VERSION: "1"

test:coverage:
  <<: *test-template
  variables:
    PHP_VERSION: "7.4"
    COMPOSER_VERSION: "2"
  before_script:
    - pecl channel-update pecl.php.net
    - pecl install pcov
    - docker-php-ext-enable pcov
  after_script:
    - COMPOSER_PROCESS_TIMEOUT=1000 composer test:ci -- --testdox
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
